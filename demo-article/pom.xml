<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>duo-graphql-parent</artifactId>
        <groupId>com.github.caijh.apps.graphql</groupId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>demo-article</artifactId>

    <properties>
        <docker.project.id>article.graphql.duo</docker.project.id>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.github.caijh.framework</groupId>
            <artifactId>framework-web</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.caijh.apps.graphql</groupId>
            <artifactId>graphql-provider-remote-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>

        <plugins>
            <!-- 用于读取git信息 -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>4.0.5</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <!-- 默认绑定阶段initialize -->
                        <phase>initialize</phase>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
                    <prefix>git</prefix>
                    <verbose>true</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                    </generateGitPropertiesFilename>
                    <format>json</format>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>false</always>
                        <dirty>-dirty</dirty>
                    </gitDescribe>
                </configuration>
            </plugin>

            <!-- 重要！Duo-Doc，通过解析源码、注释自动生成接口信息 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <doclet>com.duoec.doc.doclet.DuoDoclet</doclet>
                    <docletArtifact>
                        <groupId>com.duoec.doc</groupId>
                        <artifactId>duo-doclet</artifactId>
                        <version>1.2-SNAPSHOT</version>
                    </docletArtifact>
                    <sourcepath>
                        <!-- 指定源码路径，如果多个模块，需要包含进去，使用半角冒号分隔 -->
                        ${project.basedir}/src/main/java
                    </sourcepath>
                    <useStandardDocletOptions>false</useStandardDocletOptions>

                    <additionalJOptions>
                        <additionalJOption>-J-Dbasedir=${project.basedir}</additionalJOption>
                        <!-- Graphql Provider必须添加commitId，否则无法确定版本 -->
                        <additionalJOption>-J-DcommitId=${git.commit.id}</additionalJOption>
                        <!-- appID，指定了appId后，会替换成当前文档的名称 -->
                        <additionalJOption>-J-DappId=${docker.project.id}</additionalJOption>
                        <!-- 这一句非常重要，指定导出方式为graphql -->
                        <additionalJOption>-J-Dexporter=graphql,server</additionalJOption>
                        <!-- api.json文件导出路径 -->
                        <additionalJOption>-J-DoutputDirectory=${project.build.outputDirectory}</additionalJOption>
                        <additionalJOption>-J-Dserver=http://doc.duoec.com</additionalJOption>
                    </additionalJOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <!-- package可以在提交代码后由CI自动触发，如果不需要自动触发，可以设置为site，届时需要手工执行：mvn clean site -->
                        <phase>compile</phase>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
